version: '3.8'

services:
  # Servicio para la base de datos MySQL
  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: examplepassword
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3307:3306"  # Exponer el puerto 3307 en el host para evitar conflictos
    volumes:
      - mysql_data:/var/lib/mysql  # Volumen persistente para la base de datos

  # Servicio para la aplicación Django
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    command: gunicorn monolito.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app                      # Mapear el código fuente
      - ./staticfiles:/app/staticfiles  # Mapear los archivos estáticos
      - ./media:/app/media              # Mapear los archivos de medios
    environment:
      DJANGO_SECRET_KEY: "tu_secreto_aqui"
      DJANGO_DEBUG: "False"  # En producción, DEBUG debe estar en False
      MYSQL_DATABASE: "mydatabase"
      MYSQL_USER: "myuser"
      MYSQL_PASSWORD: "mypassword"
      MYSQL_HOST: "db"
      MYSQL_PORT: "3306"  # Internamente usa el puerto 3306
    depends_on:
      - db
    expose:
      - "8000"  # Exponer el puerto interno de Gunicorn

  # Servicio para el servidor Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"  # Exponer el puerto 80 para la web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf  # Archivo de configuración de Nginx
      - ./staticfiles:/app/staticfiles  # Mapear archivos estáticos
      - ./media:/app/media              # Mapear archivos de medios
    depends_on:
      - web

# Definición de volúmenes persistentes
volumes:
  mysql_data:
